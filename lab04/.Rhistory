install.packages(fs)
install.packages("fs")
install.packages("fs", type = "source")
install.packages('fs',repos='http://cran.us.r-project.org')
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
library("Rcpp")
install.packages("fs")
install.packages("devtools")
devtools::install_github("gluc/ahp", build_vignettes = TRUE)
install.packages("vctrs")
devtools::install_github("gluc/ahp", build_vignettes = TRUE)
install.packages("magrittr ")
install.packages("magrittr")
install.packages("tidyverse")
lodowki <- data.frame(model = c("A", "B", "C", "D"),
                      pojemnosc_chlodziarki = c(200, 150, 250, 180),
                      pojemnosc_zamrazarki = c(100, 80, 120, 90),
                      cena = c(3000, 2500, 3500, 2000))
lodowki
macierz_porownan <- matrix(c(1, 3, 5, 7,
                              1/3, 1, 3, 5,
                              1/5, 1/3, 1, 3,
                              1/7, 1/5, 1/3, 1), nrow = 4, ncol = 4, byrow = TRUE)
macierz_porownan_lodowki <- matrix(c(1, 3, 5, 7,
                                      1/3, 1, 2, 4,
                                      1/5, 1/2, 1, 3,
                                      1/7, 1/4, 1/3, 1), nrow = 4, ncol = 4, byrow = TRUE)
wagi_kryteriow <- AHP(macierz_porownan)$weights
install.packages("ahp")
devtools::install_github("gluc/ahp", build_vignettes = TRUE)
devtools::install_github("gluc/ahp")
wagi_kryteriow <- AHP(macierz_porownan)$weights
library(APH)
library(aph)
library(ahp)
wagi_kryteriow <- AHP(macierz_porownan)$weights
wagi_kryteriow <- ahp(macierz_porownan)$weights
wagi_kryteriow <- Analyze(macierz_porownan)$criteria_weights
wagi_kryteriow <- Analyze(macierz_porownan)
wagi_kryteriow <- Analyze(macierz_porownan)$criteria_weights
macierz_porownan
vignette("car-example", package = "ahp")
ahpFile <- system.file("extdata", "car.ahp", package="ahp")
carAhp <- Load(ahpFile)
carAhp
system.file("extdata", "car.ahp", package="ahp")
Calculate(carAhp)
Visualize(carAhp)
Analyze(carAhp)
AnalyzeTable(carAhp)
setwd("C:\repos\APU\lab02")
setwd("C:/repos/APU/lab02")
ahpFile <- system.file("extdata", "car.ahp", package="ahp")
ahpFile <- system.file("extdata", "lodowki.txt", package="ahp")
ahpFile
ahpFile <- system.file("lodowki.txt")
ahpFile
ahpFile <- system.file("lodowki.txt")
ahpFile
ahpFile <- system.file("extdata", "lodowki.txt", package="ahp")
ahpFile
ahpFile <- system.file("extdata", "lodowki.ahp", package="ahp")
ahpFile
ahpFile <- system.file("extdata", "lodowki.ahp", package="ahp")
ahpFile
lodowkiAhp <- Load(ahpFile)
lodowkiAhp <- Load(ahpFile)
ahpFile <- system.file("extdata", "lodowki.ahp", package="ahp")
lodowkiAhp <- Load(ahpFile)
Calculate(lodowkiAhp)
Visualize(lodowkiAhp)
Analyze(lodowkiAhp)
AnalyzeTable(lodowkiAhp)
save.image("C:\\repos\\APU\\lab02\\workspace")
library(neuralnet)
install.packages(neuralnet)
install.packages("neuralnet")
library(nauralnet)
library(neuralnet)
x <- seq(0, 1, length.out = 100)
y <- sin(2*pi*x)
data <- data.frame(x, y)
nn <- neuralnet(y ~ x, data, hidden = c(10, 5), threshold = 0.01)
nn
fridges <- data.frame(
  capacity = c(300, 250, 400, 200, 350),
  freezer_type = c("bottom", "top", "side-by-side", "top", "bottom"),
  price = c(1000, 800, 1500, 600, 1200)
)
nn <- neuralnet(price ~ capacity + freezer_type, fridges, hidden = c(5, 2))
nn <- neuralnet(price ~ capacity, fridges, hidden = c(5, 2))
nn
lodowy <- data.frame(
  name=c("Lodowka1","Lodowka2","Lodowka3","Lodowka4","Lodowka5"),
  pojemnosc_zamrazarki = c(300, 250, 400, 200, 350),
  pojemnosc=c(500,450,400,350,300),
  cena = c(1000, 800, 1500, 600, 1200)
)
nn <- neuralnet(cena ~ pojemnosc_zamrazarki ~ pojemnosc, fridges, hidden = c(5, 2), threshold = 0.01)
nn <- neuralnet(cena ~ pojemnosc_zamrazarki ~ pojemnosc, lodowy, hidden = c(5, 2), threshold = 0.01)
nn <- neuralnet(cena ~ pojemnosc_zamrazarki, lodowy, hidden = c(5, 2), threshold = 0.01)
nn <- neuralnet(cena ~ pojemnosc_zamrazarki + pojemnosc, lodowy, hidden = c(5, 2), threshold = 0.01)
prediction <- predict(nn, data.frame(pojemnosc = 250))
prediction <- compute(nn, data.frame(pojemnosc = 250))
prediction <- compute(nn, data.frame(pojemnosc = 450))
prediction <- compute(nn, data.frame(cena = 450))
prediction <- compute(nn, data.frame(cena = 450, pojemnosc=250))
price_predicted <- prediction$net.result
price_predicted
prediction <- compute(nn, data.frame(pojemnosc_zamrazarki = 300, pojemnosc=350))
predict
prediction
prediction <- compute(nn, data.frame(pojemnosc_zamrazarki = 500, pojemnosc=500))
prediction
nn <- neuralnet(cena ~ pojemnosc_zamrazarki + pojemnosc, lodowy, hidden = c(20, 10), threshold = 0.01)
prediction <- compute(nn, data.frame(pojemnosc_zamrazarki = 300, pojemnosc=350))
prediction
prediction <- compute(nn, data.frame(pojemnosc_zamrazarki = 100, pojemnosc=150))
prediction
set.seed(123)
n <- 20
lodowy <- data.frame(
  name = paste0("Lodowka",1:n),
  pojemnosc_zamrazarki = sample(100:1000, n, replace = T),
  pojemnosc = sample(400:800, n, replace = T),
  cena = sample(600:1200, n, replace = T)
)
nn <- neuralnet(cena ~ pojemnosc_zamrazarki + pojemnosc, lodowy, hidden = c(20, 5), threshold = 100)
prediction <- compute(nn, data.frame(pojemnosc_zamrazarki = 300, pojemnosc=350))
price_predicted <- prediction$net.result
price_predicted
getwd()
setwd("C:/repos/APU/lab04")
getwd
getwd()
set.seed(123)
n <- 30
customer_ratings <- data.frame(
  rating = sample(1:5, n, replace = TRUE),
  price = sample(c(100,200,300,400,500,600,700,800,900,1000), n, replace = TRUE),
  capacity = sample(c(100,200,300,400,500,600,700,800,900,1000), n, replace = TRUE),
  power = sample(c(100,200,300,400,500,600,700,800,900,1000), n, replace = TRUE),
  brand = sample(c("Brand A", "Brand B", "Brand C", "Brand D","Brand E"), n, replace = TRUE)
)
# Zapis do pliku CSV
write.csv(customer_ratings, "customer_ratings.csv", row.names = FALSE)
install.packages(C50)
install.packages("C50")
library(C50)
data <- read.csv("customer_ratings.csv")
model <- C5.0(rating ~ price + capacity + power + brand + features, data)
model <- C5.0(rating ~ price + capacity + power + brand, data)
model <- C5.0(rating ~ price + capacity, data)
data$rating <- as.factor(data$rating)
model <- C5.0(rating ~ price + capacity + power + brand + features, data)
model <- C5.0(rating ~ price + capacity + power + brand, data)
cv_model <- C5.0(rating ~ price + capacity + power + brand, data, trials = 10)
new_data <- data.frame(price = 500, capacity = 300, power = 100, brand = "Brand A", features = "feature1, feature2")
predict(model, new_data)
cv_model
model
predict(model, new_data)
new_data <- data.frame(price = 500, capacity = 300, power = 100, brand = "Brand A")
predict(model, new_data)
new_data2 <- data.frame(price = 200, capacity = 500, power = 300, brand = "Brand A")
predict(model, new_data2)
new_data2 <- data.frame(price = 100, capacity = 100, power = 100, brand = "Brand A")
predict(model, new_data2)
new_data2 <- data.frame(price = 10000, capacity = 10000, power = 10000, brand = "Brand C")
predict(model, new_data2)
q()
